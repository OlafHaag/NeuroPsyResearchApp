import json

from src.i18n import _, list_languages, language_code_to_translation

LANGUAGE_CODE = "language"
LANGUAGE_SECTION = "Localization"

settings_general_json = json.dumps([
    {'type': 'optionmapping',
     'title': _("Language"),
     'desc': _("Display language for user instructions."),
     'section': LANGUAGE_SECTION,
     'key': LANGUAGE_CODE,
     'options': {code: language_code_to_translation(code)
                 for code in list_languages()}},
    {'type': 'title',
     'title': 'User Data'},
    {'type': 'string',
     'title': 'Unique Identifier',
     'desc': 'Anonymous identifier for the current user.',
     'section': 'UserData',
     'key': 'unique_id'},
    {'type': 'buttons',
     'title': "New User",
     "desc": "Generates a new unique identifier.",
     "section": "UserData",
     'key': 'configchangebuttons',
     'buttons': [{'title': _("New UUID"), 'id': 'btn_new_uuid'}]},
    {'type': 'title',
     'title': 'Task'},
    {'type': 'options',
     'title': _('Current Task'),
     'desc': 'Which task should be run.',
     'section': 'General',
     'key': 'task',
     'options': ['Circle Task']},
    {'type': 'title',
     'title': 'Data Collection'},
    {'type': 'bool',
     'title': _('Local Storage'),
     'desc': _('Save data locally on device.'),
     'section': 'DataCollection',
     'key': 'is_local_storage_enabled'},
    {'type': 'bool',
     'title': _('Upload Data'),
     'desc': _('Send collected data to server.'),
     'section': 'DataCollection',
     'key': 'is_upload_enabled'},
    {'type': 'string',
     'title': _('Upload Server'),
     'desc': _('Target server address to upload data to.'),
     'section': 'DataCollection',
     'key': 'webserver'},
    {'type': 'bool',
     'title': _('Send E-Mail'),
     'desc': _('Offer to send data via e-mail.'),
     'section': 'DataCollection',
     'key': 'is_email_enabled'},
    {'type': 'string',
     'title': _('E-Mail Recipient'),
     'desc': _('E-mail address to send data to.'),
     'section': 'DataCollection',
     'key': 'email_recipient'},
])

settings_circle_task_json = json.dumps([
    {'type': 'numeric',
     'title': 'Number of trials',
     'desc': 'Trials per block.',
     'section': 'CircleTask',
     'key': 'n_trials'},
    {'type': 'numeric',
     'title': 'Number of Blocks',
     'desc': 'Number of subsequent blocks per run.',
     'section': 'CircleTask',
     'key': 'n_blocks'},
    {'type': 'numeric',
     'title': 'Constrained-Task Block',
     'desc': 'Which of the blocks has the constrained task.',
     'section': 'CircleTask',
     'key': 'constrained_block'},
    {'type': 'numeric',
     'title': 'Warm Up',
     'desc': 'Pause before each trial to get ready.',
     'section': 'CircleTask',
     'key': 'warm_up_time'},
    {'type': 'numeric',
     'title': 'Trial Duration',
     'desc': 'Countdown timer.',
     'section': 'CircleTask',
     'key': 'trial_duration'},
    {'type': 'numeric',
     'title': 'Cool Down',
     'desc': 'Pause after each trial.',
     'section': 'CircleTask',
     'key': 'cool_down_time'}
])
